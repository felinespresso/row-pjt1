datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

// prisma/schema.prisma
model Account {
  id                String  @id @default(cuid())  
  userId            String  @map("user_id")
  type              String  
  provider          String
  providerAccountId String  @map("provider_account_id")  
  refresh_token     String?
  access_token      String?  
  expires_at        Int?
  token_type        String?  
  scope             String?
  id_token          String?  
  session_state     String?
  user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)
  @@unique([provider, providerAccountId])  
  @@map("accounts")
}

model Session {
  id           String   @id @default(cuid())  
  sessionToken String   @unique @map("session_token")
  userId       String   @map("user_id")  
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  @@map("sessions")
}

model User {
  id            String    @id @default(cuid())  
  username      String?
  email         String?   @unique  
  emailVerified DateTime? @map("email_verified")
  image         String?  
  password      String?
  role          String    @default("user")  
  accounts      Account[]
  sessions      Session[]
  @@map("users")
}

model VerificationToken {  
  identifier String
  token      String  
  expires    DateTime
  @@unique([identifier, token])
  @@map("verification_tokens")
}

model item {
  id                   Int      @id @default(autoincrement())
  namaproyek           String
  nomorkontrak         String
  kodeproyek           String
  tanggalkontrak       DateTime
  tanggalakhirkontrak  DateTime?
  password             String
}

model inventarisasi {
  id             Int      @id @default(autoincrement())
  span           String   @default("-")
  bidanglahan    String   @default("-")
  formulir       Bytes?
  pelaksanaan    DateTime @default(now())
  namapemilik    String   @default("-")
  nik            String   @default("-")
  ttl            String   @default("-")
  desakelurahan  String   @default("-")
  kecamatan      String   @default("-")
  kabupatenkota  String   @default("-")
  alashak        String   @default("-")
  luastanah      String   @default("-")
  jnsbangunan    inventbangunan[]
  jnstanaman     inventtanaman[]
}

model jenisbangunan {
  id             Int      @id @default(autoincrement())
  namabangunan   String   @default("-")
  luasbangunan   String   @default("-")
  invent         inventbangunan[]
}

model jenistanaman {
  id             Int      @id @default(autoincrement())
  namatanaman    String   @default("-")
  produktif      String   @default("-")
  besar          String   @default("-")
  kecil          String   @default("-")
  bibit          String   @default("-")
  invent         inventtanaman[]
}

model inventbangunan {
  inventId      Int
  bangunanId    Int
  invent        inventarisasi @relation(fields: [inventId], references: [id])
  jnsbangunan   jenisbangunan @relation(fields: [bangunanId], references: [id])

  @@id([inventId, bangunanId]) // Composite primary key
} 

model inventtanaman {
  inventId      Int
  tanamanId     Int
  invent        inventarisasi @relation(fields: [inventId], references: [id])
  jnstanaman    jenistanaman @relation(fields: [tanamanId], references: [id])

  @@id([inventId, tanamanId]) // Composite primary key
}

model Identifikasi {  
  id            String      @id @default(cuid())
  namadesa      String  
  spantower     String
  tanggal       String?  
  fotoudara     String?
  createdAt     DateTime    @default(now())  
  updatedAt     DateTime    @updatedAt
  evidence      Evidences[]
  sosialisasi   Sosialisasi[]
  pengumuman    Pengumuman[]
}

model Evidences {
  id          String       @id @default(cuid())  
  file        String
  namaPemilik String
  desaId      String  
  desa        Identifikasi @relation(fields: [desaId], references: [id], onDelete: Cascade)
}

model Sosialisasi {
  id                String              @id @default(cuid())
  identifikasi     Identifikasi        @relation(fields: [identifikasiId], references: [id], onDelete: Cascade)
  identifikasiId   String
  namaDesa         String              
  spanTower        String              
  tanggalPelaksanaan DateTime
  beritaAcara      Bytes?
  daftarHadir      Bytes?
  keterangan       String              @default("-")
  evidence         EvidenceSosialisasi[] 
  createdAt        DateTime            @default(now())
  updatedAt        DateTime            @updatedAt

  @@index([identifikasiId])
}

model EvidenceSosialisasi {
  id              String       @id @default(cuid())
  file            String
  sosialisasiId   String
  sosialisasi     Sosialisasi @relation(fields: [sosialisasiId], references: [id], onDelete: Cascade)

  @@index([sosialisasiId])
}

model Pengumuman {
  id                String              @id @default(cuid())
  identifikasi     Identifikasi        @relation(fields: [identifikasiId], references: [id], onDelete: Cascade)
  identifikasiId   String
  namaDesa         String              
  spanTower        String              
  tanggalPelaksanaan DateTime
  keterangan       String              @default("-")
  beritaAcara      Bytes?
  evidence         EvidencePengumuman[] 
  createdAt        DateTime            @default(now())
  updatedAt        DateTime            @updatedAt

  @@index([identifikasiId])
}

model EvidencePengumuman {
  id              String       @id @default(cuid())
  file            String
  PengumumanId   String
  pengumuman     Pengumuman @relation(fields: [PengumumanId], references: [id], onDelete: Cascade)

  @@index([PengumumanId])
}